plugins {
    id("io.micronaut.library") version "3.4.0"
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id 'java'
}

version = "0.1"
group = "com.blocpal.mbnk.fasttag"

repositories {
    mavenCentral()
}

configurations {
    invoker
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.blocpal.mbnk.fasttag.*")
    }
}

dependencies {
    implementation (project(":gcloud_common"))
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    annotationProcessor  'io.micronaut:micronaut-inject-java:3.4.3'

    // micronaut
    implementation('javax.annotation:javax.annotation-api:1.3.2')
    implementation('javax.inject:javax.inject:1')
    implementation("io.micronaut:micronaut-runtime:3.4.3")
    implementation("io.micronaut:micronaut-http-client:3.4.3")
    implementation("io.micronaut:micronaut-validation:3.4.3")
    implementation 'io.micronaut.security:micronaut-security:3.5.0'
    implementation 'io.micronaut.security:micronaut-security-jwt:3.5.0'
    implementation 'com.kenai.nbpwr:edu-umd-cs-findbugs-annotations:1.3.2-201002241900'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    // micronaut - gcp
    implementation("io.micronaut.gcp:micronaut-gcp-function:4.2.0")
    implementation("io.micronaut.gcp:micronaut-gcp-common:4.2.0")
    implementation("io.micronaut.gcp:micronaut-gcp-logging:4.2.0")
    implementation("io.micronaut.gcp:micronaut-gcp-function-http:4.2.0")

    // google cloud
    compileOnly("com.google.cloud.functions:functions-framework-api:1.0.4")
    invoker 'com.google.cloud.functions.invoker:java-function-invoker:1.1.0'
    implementation('com.google.cloud:google-cloud-secretmanager:2.1.7')
    implementation platform('com.google.cloud:libraries-bom:20.9.0')
    implementation 'com.google.firebase:firebase-admin:8.1.0'

    // others
    compileOnly 'org.projectlombok:lombok:1.18.24'
    implementation 'org.modelmapper:modelmapper:2.4.2'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation ('org.json:json:20201115')
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    implementation 'io.jsonwebtoken:jjwt-api:0.11.1'

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'

// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-jackson
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'


    // runtime
    runtimeOnly('ch.qos.logback:logback-classic:1.2.11')

    // test
    testImplementation('io.micronaut:micronaut-http-client:3.4.3')
    testImplementation 'io.micronaut:micronaut-http-server-netty:3.4.2'
    testImplementation('com.google.cloud.functions:functions-framework-api:1.0.4')
    testImplementation 'org.mockito:mockito-core:4.5.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.5.1'

    implementation('com.squareup.okhttp3:okhttp:4.9.3')
}


java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

tasks.named("assemble") {
    dependsOn(":shadowJar")
}

task("runFunction", type: JavaExec, dependsOn: classes) {
    main = 'com.google.cloud.functions.invoker.runner.Invoker'
    classpath(configurations.invoker)
    args(
            '--target', 'io.micronaut.gcp.function.http.HttpFunction',
            '--port', 8081
    )
    doFirst {
        args('--classpath', files(configurations.runtimeClasspath, sourceSets.main.output).asPath)
    }
}
